# syntax=docker/dockerfile:experimental

# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Docker script for building NeMo container with GWE fault tolerance, using current source code.

# How to build and push the image:
# 0. update code in repo, remember to pull submodules (git pull --recurse-submodules)
# 1. docker login gitlab-master.nvidia.com:5005
# 2. docker build -t 'gitlab-master.nvidia.com:5005/dl/gwe/fault_tolerance_related/nemo-gwe-ft:dummy_tag' -f Dockerfile_fault_tolerance .
# 3. docker push 'gitlab-master.nvidia.com:5005/dl/gwe/fault_tolerance_related/nemo-gwe-ft:dummy_tag'

FROM nvcr.io/nvidia/nemo:24.03.01.framework

RUN rm -rf /opt/NeMo
COPY . /opt/NeMo

RUN cd /opt/NeMo && pip install ".[all]" && pip install -e ./fault_tolerance

# HF tokenizers
ENV HUGGINGFACE_HUB_CACHE=/hf_cache
RUN python -c "from transformers import AutoTokenizer; \
              tok_gpt=AutoTokenizer.from_pretrained('gpt2'); \
              tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); \
              tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); \
              tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');"

# Check install
RUN python -c "import nemo.collections.nlp as nemo_nlp" && \
  python -c "import nemo.collections.tts as nemo_tts" && \
  python -c "import nemo_text_processing.text_normalization as text_normalization"

RUN printf "#!/bin/bash\njupyter lab --no-browser --allow-root --ip=0.0.0.0" >> start-jupyter.sh && \
  chmod +x start-jupyter.sh
